"""updated file upload image lists to list[str]

Revision ID: 8ce9dc24fa2a
Revises: 16a2f44abcf4
Create Date: 2025-07-16 15:32:08.898527

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '8ce9dc24fa2a'
down_revision: Union[str, None] = '16a2f44abcf4'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('study_response')
    op.drop_table('study_results')
    op.drop_table('study')
    op.drop_constraint(op.f('survey_answer_survey_question_id_key'), 'survey_answer', type_='unique')
    op.drop_constraint(op.f('survey_answer_survey_question_id_fkey'), 'survey_answer', type_='foreignkey')
    op.drop_column('survey_answer', 'survey_question_id')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('survey_answer', sa.Column('survey_question_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.create_foreign_key(op.f('survey_answer_survey_question_id_fkey'), 'survey_answer', 'survey_question', ['survey_question_id'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
    op.create_unique_constraint(op.f('survey_answer_survey_question_id_key'), 'survey_answer', ['survey_question_id'], postgresql_nulls_not_distinct=False)
    op.create_table('study',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('configuration_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['configuration_id'], ['study_config.id'], name='study_configuration_id_fkey', onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='study_pkey'),
    sa.UniqueConstraint('configuration_id', name='study_configuration_id_key', postgresql_include=[], postgresql_nulls_not_distinct=False),
    sa.UniqueConstraint('id', name='study_id_key', postgresql_include=[], postgresql_nulls_not_distinct=False),
    postgresql_ignore_search_path=False
    )
    op.create_table('study_results',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('study_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('subject_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('submitted', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['study_id'], ['study.id'], name='study_results_study_id_fkey', onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='study_results_pkey'),
    sa.UniqueConstraint('id', name='study_results_id_key', postgresql_include=[], postgresql_nulls_not_distinct=False),
    sa.UniqueConstraint('study_id', name='study_results_study_id_key', postgresql_include=[], postgresql_nulls_not_distinct=False),
    sa.UniqueConstraint('subject_id', name='study_results_subject_id_key', postgresql_include=[], postgresql_nulls_not_distinct=False),
    postgresql_ignore_search_path=False
    )
    op.create_table('study_response',
    sa.Column('study_results_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('image_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('answer', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['study_results_id'], ['study_results.id'], name=op.f('study_response_study_results_id_fkey'), onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('study_results_id', name=op.f('study_response_pkey')),
    sa.UniqueConstraint('study_results_id', name=op.f('study_response_study_results_id_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    # ### end Alembic commands ###
